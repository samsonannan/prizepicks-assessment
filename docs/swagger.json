{
    "swagger": "2.0",
    "info": {
        "description": "This is a system to keep track of the different cages around the park and the different dinosaurs in each one",
        "title": "Jurrasic Park API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/cages": {
            "post": {
                "description": "Create a new cage entry.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cages"
                ],
                "summary": "Create Cage",
                "parameters": [
                    {
                        "description": "create a new cage",
                        "name": "cage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.CageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.CageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.CageResponse"
                        }
                    }
                }
            }
        },
        "/cages/": {
            "get": {
                "description": "Retrieve a listing of cages. Can filter on power status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cages"
                ],
                "summary": "Get Cages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "retrieve cage listing, filter on power status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CagesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.CageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.CageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.CageResponse"
                        }
                    }
                }
            }
        },
        "/cages/{id}": {
            "get": {
                "description": "Retrieve a cage by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cages"
                ],
                "summary": "Get Cage By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "retrieve a cage by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.CageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.CageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.CageResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update details of cage entry by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cages"
                ],
                "summary": "Update Cage",
                "parameters": [
                    {
                        "description": "update cage details",
                        "name": "cage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.CageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.CageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.CageResponse"
                        }
                    }
                }
            }
        },
        "/cages/{id}/dinosaur": {
            "post": {
                "description": "Cage a dinosaur. CageID must be provided as destination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cages"
                ],
                "summary": "Cage Dinosaur",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cage id for dinosaur",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "cage a dinosaur given a cage id",
                        "name": "dinosaur",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurResponse"
                        }
                    }
                }
            }
        },
        "/cages/{id}/dinosaurs": {
            "get": {
                "description": "Retrieve a listing of dinosaurs in a specific cage. Can filter on attributes i.e. species or group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cages"
                ],
                "summary": "Get Dinosaurs By Cage ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "retrieve a list of dinosaurs by cage id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "retrieve dinosaur listing, filter on species",
                        "name": "species",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "retrieve dinosaur listing, filter on group i.e. HERBIVORE, CARNIVORE",
                        "name": "group",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaursResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurResponse"
                        }
                    }
                }
            }
        },
        "/dinosaurs/": {
            "get": {
                "description": "Retrieve a listing of dinosaurs. Can filter on attributes i.e. species or group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dinosaurs"
                ],
                "summary": "Get Dinosaurs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "retrieve dinosaur listing, filter on species",
                        "name": "species",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "retrieve dinosaur listing, filter on group i.e. herbivore, carnivore",
                        "name": "group",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaursResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurResponse"
                        }
                    }
                }
            }
        },
        "/dinosaurs/{id}": {
            "get": {
                "description": "Retrieve a dinosaur by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dinosaurs"
                ],
                "summary": "Get Dinosaur By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "retrieve a dinosaur by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates information stored on a dinosaur. Can move dinosaur to cage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dinosaurs"
                ],
                "summary": "Update Dinosaur",
                "parameters": [
                    {
                        "description": "update dinosaur information",
                        "name": "dinosaur",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.DinosaurResponse"
                        }
                    }
                }
            }
        },
        "/dinosaurs/{id}/cage": {
            "get": {
                "description": "Retrieve the cage for dinosaur.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dinosaurs"
                ],
                "summary": "Get Cage By Dinosaur ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "retrieve cage by dinosaur id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.CageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.CageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.CageResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "cage.Status": {
            "type": "string",
            "enum": [
                "ACTIVE",
                "ACTIVE",
                "DOWN"
            ],
            "x-enum-varnames": [
                "DefaultStatus",
                "StatusACTIVE",
                "StatusDOWN"
            ]
        },
        "dinosaur.Group": {
            "type": "string",
            "enum": [
                "HERBIVORE",
                "CARNIVORE"
            ],
            "x-enum-varnames": [
                "GroupHERBIVORE",
                "GroupCARNIVORE"
            ]
        },
        "ent.Cage": {
            "type": "object",
            "properties": {
                "capacity": {
                    "description": "capacity for each cage entity. defaults to zero",
                    "type": "integer"
                },
                "created_at": {
                    "description": "CreatedAt holds the value of the \"created_at\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CageQuery when eager-loading is set.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ent.CageEdges"
                        }
                    ]
                },
                "id": {
                    "description": "ID of the ent.\nunique uuid for each cage entity",
                    "type": "string"
                },
                "size": {
                    "description": "number of dinosaurs held in cage. defaults to zero",
                    "type": "integer"
                },
                "status": {
                    "description": "status for cage entity. can be ACTIVE or DOWN only",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cage.Status"
                        }
                    ]
                },
                "updated_at": {
                    "description": "UpdatedAt holds the value of the \"updated_at\" field.",
                    "type": "string"
                }
            }
        },
        "ent.CageEdges": {
            "type": "object",
            "properties": {
                "dinosaurs": {
                    "description": "Dinosaurs holds the value of the dinosaurs edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Dinosaur"
                    }
                }
            }
        },
        "ent.Dinosaur": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "CreatedAt holds the value of the \"created_at\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DinosaurQuery when eager-loading is set.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ent.DinosaurEdges"
                        }
                    ]
                },
                "group": {
                    "description": "group defines eating class based on species i.e HERBIVORE, CARNIVORE",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dinosaur.Group"
                        }
                    ]
                },
                "id": {
                    "description": "ID of the ent.\nunique uuid for each dinosaur entity",
                    "type": "string"
                },
                "name": {
                    "description": "name of dinosaur. must not be empty",
                    "type": "string"
                },
                "species": {
                    "description": "species dinosaur belongs. must not be empty",
                    "type": "string"
                },
                "updated_at": {
                    "description": "UpdatedAt holds the value of the \"updated_at\" field.",
                    "type": "string"
                }
            }
        },
        "ent.DinosaurEdges": {
            "type": "object",
            "properties": {
                "cage": {
                    "description": "Cage holds the value of the cage edge.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ent.Cage"
                        }
                    ]
                }
            }
        },
        "models.CageRequest": {
            "type": "object",
            "properties": {
                "capacity": {
                    "description": "Capacity holds a pointer to an 'int64' value, representing the capacity of a cage.",
                    "type": "integer"
                },
                "status": {
                    "description": "Status holds a 'string' value, representing the status of a cage.",
                    "type": "string"
                }
            }
        },
        "models.CageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data holds a pointer to an 'ent.Cage' object, which represents cage-related data.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ent.Cage"
                        }
                    ]
                },
                "error": {
                    "description": "Error stores any error message in case of a failed request.",
                    "type": "string"
                },
                "status": {
                    "description": "Status indicates the success or failure of the request.",
                    "type": "boolean"
                }
            }
        },
        "models.CagesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains a slice of pointers to 'ent.Cage' objects, which hold the cage-related data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Cage"
                    }
                },
                "error": {
                    "description": "Error stores any error message in case of a failed request.",
                    "type": "string"
                },
                "status": {
                    "description": "Status indicates the success or failure of the request.",
                    "type": "boolean"
                }
            }
        },
        "models.DinosaurRequest": {
            "type": "object",
            "properties": {
                "cage_id": {
                    "description": "CageID holds the ID of the cage where the dinosaur resides (optional).",
                    "type": "string"
                },
                "group": {
                    "description": "Group holds the group of the dinosaur (optional).",
                    "type": "string"
                },
                "name": {
                    "description": "Name holds the name of the dinosaur.",
                    "type": "string"
                },
                "species": {
                    "description": "Species holds the species of the dinosaur.",
                    "type": "string"
                }
            }
        },
        "models.DinosaurResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data holds a pointer to an 'ent.Dinosaur' object, which represents dinosaur-related data.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ent.Dinosaur"
                        }
                    ]
                },
                "error": {
                    "description": "Error stores any error message in case of a failed request.",
                    "type": "string"
                },
                "status": {
                    "description": "Status indicates the success or failure of the request.",
                    "type": "boolean"
                }
            }
        },
        "models.DinosaursResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains a slice of pointers to 'ent.Dinosaur' objects, which hold the dinosaur-related data.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Dinosaur"
                    }
                },
                "error": {
                    "description": "Error stores any error message in case of a failed request.",
                    "type": "string"
                },
                "status": {
                    "description": "Status indicates the success or failure of the request.",
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}