// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CagesColumns holds the columns for the "cages" table.
	CagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "size", Type: field.TypeInt64, Default: 0},
		{Name: "capacity", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"ACTIVE", "DOWN"}, Default: "ACTIVE"},
	}
	// CagesTable holds the schema information for the "cages" table.
	CagesTable = &schema.Table{
		Name:       "cages",
		Columns:    CagesColumns,
		PrimaryKey: []*schema.Column{CagesColumns[0]},
	}
	// DinosaursColumns holds the columns for the "dinosaurs" table.
	DinosaursColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "species", Type: field.TypeString},
		{Name: "group", Type: field.TypeEnum, Enums: []string{"HERBIVORE", "CARNIVORE"}},
		{Name: "cage_id", Type: field.TypeUUID, Nullable: true},
	}
	// DinosaursTable holds the schema information for the "dinosaurs" table.
	DinosaursTable = &schema.Table{
		Name:       "dinosaurs",
		Columns:    DinosaursColumns,
		PrimaryKey: []*schema.Column{DinosaursColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "dinosaurs_cages_dinosaurs",
				Columns:    []*schema.Column{DinosaursColumns[6]},
				RefColumns: []*schema.Column{CagesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CagesTable,
		DinosaursTable,
	}
)

func init() {
	DinosaursTable.ForeignKeys[0].RefTable = CagesTable
}
